#define _CRT_SECURE_NO_WARNINGS 1
#pragma warning(disable:6031)
#include<stdio.h>
#include<string.h>
//奇数偶数判断
//int main()
//{
//	int a = 0;
//	int b = 0;
//	printf("请输入数字：");
//	scanf("%d" , &a);
//	b = a % 2;
//	if (b == 1)
//		printf("该数字为奇数");
//	else
//		printf("该数字为偶数");
//	return 0;
//}

//求n的阶乘
//int main()
//{
//	int i = 0;
//	int chen = 1;
//	int n = 3;
//	    printf("n=");
//		scanf("%d", &n);
//		for (i = 1; i <= n; i++)
//		{
//			chen = chen * i;
//		}
//		printf("阶乘为：%d", chen);
//	return 0;
//}

//求1!+2!+3!+……+10!
//int factorial(int n)
//{
//	int chen = 1;
//	int i = 0;
//	for (i = 1; i <= n; i++)
//	{
//		chen = chen * i;
//	}
//	return chen;
//}
//int main()
//{
//	int sum = 0;
//	int j = 0;
//	int m = 0;
//	for (j = 0; j < 10; j++)
//	{
//		m++;
//		sum = sum + factorial(m);
//	}
//	printf("1!+2!+3!+……+10!=%d\n", sum);
//}

//数组二分查找
//int main()
//{
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	int mid = 0;
//	int a = 11;
//	int left = 0;
//	int right = 0;
//	left = 0;
//	right = sizeof(arr) / sizeof(arr[0]) - 1;
//	mid = (left+right)/2;
//	do
//	{
//		if (a > arr[mid])
//		{
//			left = mid;
//			mid = (left + right) / 2;
//		}
//		else if (a < arr[mid])
//		{
//			right = mid;
//			mid = (left + right) / 2;
//		}
//		else
//		{
//			printf("数组内有该数字，下标为%d\n", mid);
//			break;
//		}
//	} 
//	while (left+1 < right);
//	if (left < right)
//	{
//		printf("数组内无该数字");
//	}
//	return 0;
//}

//"My future is in my hand!!!"逐步展示
//int main()
//{
//	char arr1[] = { "My future is in my hand!!!" };
//	char arr2[] = { "##########################" };
//	int left, right;
//	int i = 0;
//	left = 0;
//	right = sizeof(arr1) / sizeof(arr1[0]) - 2;
//	do
//	{
//		for (i = 0; i <= sizeof(arr1)- 2; i++)
//		{
//			printf("%c", arr2[i]);
//		}
//		printf("\n");
//		arr2[left] = arr1[left];
//		arr2[right] = arr1[right];
//		left++;
//		right--;
//	} while (left <= right+1);
//	return 0;
//}

//模拟输入密码（限尝试三次）
//int main()
//{
//	char arr1[] = { "123456" };
//	char arr2[7] = {0};
//	int i = 0;
//	for (i = 1; i <= 3; i++)
//	{
//		printf("请输入密码：");
//		scanf("%s", &arr2);
//		if (strcmp(arr1, arr2) == 0)
//		{
//			printf("密码输入正确\n");
//			break;
//		}
//		else
//		{
//			printf("密码错误，还有%d次机会\n",3-i);
//		}
//	}
//	return 0;
//}

//简单排序
//int main()
//{
//	int arr1[6] = { 3,4,2,1,6,5 };
//	int i = 0;
//	int j = 0;
//	int k = 0;
//	int a = 0;
//	for (i = 0; i < 6; i++)
//	{
//		for (j = i + 1; j < 6; j++)
//		{
//			if (arr1[i] < arr1[j])
//			{
//				a = arr1[i];
//				arr1[i] = arr1[j];
//				arr1[j] = a;
//			}
//			else
//				continue;
//		}
//	}
//	printf("数组从大到小排序为：");
//	for (k = 0; k < 6; k++)
//	{
//		printf("%d", arr1[k]);
//	}
//	return 0;
//}

//打印1~100内所有三的倍数
//int main()
//{
//	int a = 0, b = 0, i = 0;
//	printf("1~100内所有三的倍数有：");
//	for (i = 1; i <= 100; i++)
//	{
//		if (i % 3 == 0)
//		{
//			printf("%d ", i);
//		}
//	}
//	return 0;
//}

//求两个数的最大公约数
//int min(int x, int y)
//{
//	int z = 0;
//	if (x > y)
//		z = y;
//	else
//		z = x;
//	return z;
//}
//int main()
//{
//	int a, b;
//	int c = 0;
//	printf("a=");
//	scanf("%d", &a);
//	printf("b=");
//	scanf("%d", &b);
//	c = min(a, b);
//	for (; c > 0; c--)
//	{
//		if (a % c == 0 && b % c == 0)
//		{
//			printf("两数最大公约数为%d", c);
//			break;
//		}
//	}
//	return 0;
//}

//打印1000年到2000年之间的闰年
//int main()
//{
//	int a, b;
//	printf("1000年到2000年之间的闰年有；");
//	for (a = 1000; a <= 2000; a++)
//	{
//		if (a % 4 == 0)
//		{
//			printf("%d ", a);
//		}
//	}
//
//	return 0;
//}

//分数求和
//int main()
//{
//	int i;
//	double a=1, b=2;
//	double sum=0;
//	for (i = 0; i < 50; i++)
//	{
//		sum = sum + 1 / a - 1 / b;
//		a=a+2;
//		b=b+2;
//	}
//	printf("sum=%f\n", sum);
//	printf("%f%f", a, b);
//	return 0;
//}

//求最大值
//int max(int x, int y)
//{
//	int z = 0;
//	if (x > y)
//		z = x;
//	else
//		z = y;
//	return z;
//}
//int main()
//{
//	int arr[10] = { 3,2,3,5,6,7,8,9,13,2 };
//	int i = 0;
//	int m=0;
//	for (i = 0; i < 10; i++)
//	{
//		m = max(m, arr[i]);
//	}
//	printf("max=%d", m);
//	return 0;
//}

//输出乘法口诀表
//int main()
//{
//	int i, j;
//	int z = 0;
//	for (i = 1; i < 10; i++)
//	{
//		for (j = 1; j <=i; j++)
//		{
//			z = i * j;
//			printf("%d x %d = %d  ", i, j, z);
//		}
//		printf("\n");
//	}
//	return 0;
//}
